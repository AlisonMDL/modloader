// Generated by IDAStruct_To_CHeader.py
#pragma once
#include <windows.h>


#pragma pack(push, 1)
struct Queue	// sizeof = 0x10
{
	int *queue;
	int head;
	int tail;
	int size;
};
#pragma pack(pop)

static_assert(sizeof(Queue) == 0x10, "Incorrect struct size: Queue");


inline void AddToQueue(Queue* q, int i)
{
    q->queue[q->tail] = i;
    q->tail = (q->tail + 1) % q->size;
}

inline int GetFirstInQueue(Queue* q)
{
    return (q->head == q->tail? -1 : q->queue[q->head]);
}

inline void RemoveFirstInQueue(Queue* q)
{
    if(q->head != q->tail)
        q->head = (q->head + 1) % q->size;
}

